script "revNavigator_button_pophandlers_behavior_2410_Behavior"--The following menuPick handler was generated by the Menu Manager.global gSBControlSetslocal tMenuTextlocal tIDlocal tHandlerListon mouseDown   prepareItems (the hilitedLines of fld "list")end mouseDownon prepareItems tLine   if tLine is empty then       put "(No Selection" into me      exit prepareItems   else if the number of items of tLine > 1 then       put "Edit Script" & cr & "Convert to Script-only Stack Behaviors" into me      exit prepareItems   end if   put getID(tLine) into tID   put scriptHandlers(the script of tID) into tHandlerList["script"]   if the behavior of tID is not empty    then put scriptHandlers(the script of the behavior of tID) into tHandlerList["behavior"]   else put empty into tHandlerList["behavior"]   put the keys of tHandlerList["script"]["name"] into scriptHandlerList   put the keys of tHandlerList["behavior"]["name"] into behaviorHandlerList   put "function,0 before,1 on,2 after,3 getprop,4 setprop,5" into sortOrder   split sortOrder by space and comma   if the shiftkey is not "down" then       sort lines of scriptHandlerList by sortOrder[word 1 of each]      sort lines of behaviorHandlerList by sortOrder[word 1 of each]      sort lines of scriptHandlerList by word 2 of each      sort lines of behaviorHandlerList by word 2 of each   end if   put splice(cr & "(-" & cr,scriptHandlerList,behaviorHandlerList) into handlerList   --put handlerList into sendList   repeat for each line L in handlerList      if word 1 of L is among the items of "on,function,getprop,setprop,command,(-" then put tab & L & cr after sendList   end repeat   delete char -1 of sendList   --filter lines of sendList with regex pattern "^[on|function|getprop|setprop|-].*"   --replace cr with cr & tab in sendList   --put tab before sendList         put format("Copy Script\nPaste Script\nPut Handler List\nEdit Script\nConvert to Script-only Stack Behaviors\nSend:\n%s\n(-\n%s",sendList,handlerList) into meend prepareItemson menuPick pWhich   if pWhich is "Copy Script" then      set clipboardData["text"] to the script of tID   else if pWhich is "Paste Script" then      get empty      if the script of tID is not empty \            then answer warning "Replace the script of" & cr & tID & cr & "the clipboard?" with "Replace" or "Cancel"      if it is not "Cancel" then          try            set the script of tID to clipboardData["text"]         catch someErr            answer warning someErr with "OK"         end try       end if   else if pWhich is "Put Handler List" then      put the keys of tHandlerList["script"]["name"] into scriptHandlerList      put the keys of tHandlerList["behavior"]["name"] into behaviorHandlerList      sort lines of scriptHandlerList by word 2 of each      sort lines of behaviorHandlerList by word 2 of each      put "Script:" & cr & scriptHandlerList & cr & cr & "Behavior:" & cr & behaviorHandlerList   else if pWhich is "Edit Script" then      editObjectScripts   else if pWhich is "Convert to Script-only Stack Behaviors" then      put getList(false) into idList      convertToScriptOnlyStackBehaviors  idList         else if char 1 to 6 of pWhich is "Send:|" then      put tHandlerList["script"]["template"][char 7 to -1 of pWhich] into tCommand      if tCommand is empty then put tHandlerList["behavior"]["template"][char 7 to -1 of pWhich] into tCommand      put word 2 of tCommand into tCommandName      put the name of tID into tIDname      switch word 1 of tCommand         case "getprop"            ask format("The %s of %s is:",tCommandName,tIDname) with the tCommandName of tID            break         case "setprop"            ask format("Set the %s of %s to:",tCommandName,tIDname) with empty            if the result is not empty then break            set the tCommandName of tID to it            break         case "on"         case "command"         case "function"            if word 1 of tCommand is among the words of "on command" then put empty into fKey else put "function " into fKey            put the number of items of (word 3 to -1 of tCommand) into tArgCount            if tArgCount > 9 then                answer warning "Navigator can only pass 9 arguments." with "Cancel" or "Proceed"               if it is "Cancel" then break else put 9 into tArgCount            end if            repeat with i = 1 to tArgCount               ask format("For %s%s of %s, set %s to:",fKey,tCommandName,tIDname,item i of (word 3 to -1 of tCommand)) with empty               if the result is not empty then break               put it into tA[i]            end repeat            if fKey is empty then                dispatch tCommandName to tID with tA[1],tA[2],tA[3],tA[4],tA[5],tA[6],tA[7],tA[8],tA[9]            else                dispatch function tCommandName to tID with tA[1],tA[2],tA[3],tA[4],tA[5],tA[6],tA[7],tA[8],tA[9]               put the result into tResult               ask format("Function %s() of %s returned:",tCommandName,tIDname) with tResult            end if            break      end switch   else if the menuhistory of me > 6 then      put the menuhistory of me > 6 + the number of lines of the keys of tHandlerList["script"]["name"] into B      editObjectScripts ,B      send "selectScriptLine" && iff(B, tHandlerList["behavior"]["name"][pWhich], tHandlerList["script"]["name"][pWhich]) to me in 5 ticks   end ifend menuPickon selectScriptLine X   repeat for each line tStack in the openStacks      if word 1 of tStack is "revNewScriptEditor" then exit repeat   end repeat   try      select line X of field "Script" of group "Editor" of card "Main" of stack tStack      go stack tStack   catch someErr   end tryend selectScriptLine