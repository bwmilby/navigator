script "c_DragRepresentation_nav 2"local sRectArraylocal sTargetCountlocal sIDListlocal sCallerIDlocal sObjectCounton startDragging tCallerID,tIDList   put tCallerID into sCallerID   put tIDList into sIDList   put the number of lines of tIDList into sObjectCount   forceNControls (the long id of grp "rects"),sObjectCount   put 0 into i   repeat for each line tID in tIDList      add 1 to i      set the rect of control i of grp "rects" to the rect of tID   end repeat   set the width of this stack to the width of grp "rects"   set the height of this stack to the height of grp "rects"   set the topLeft of grp "rects" to 0,0   put the screenmouseLoc into SML   set the loc of this stack to SML   palette this stack   set the vis of this stack to true   go this stack   delete variable sRectArray   put 0 into sTargetCount   repeat for each line stackID in the windows      if the mode of stack stackID <> 1 then next repeat      add 1 to sTargetCount      put the rect of stack stackID into sRectArray[sTargetCount]["rect"]      put "stack" && Q(stackID) into sRectArray[sTargetCount]["id"]   end repeatend startDraggingon trackMovement   put empty into targetStackName   put the screenmouseLoc into SML   set the loc of this stack to SML   --exit trackMovement   repeat with i = 1 to sTargetCount      --put x,y && sRectArray[i]["rect"] && sRectArray[i]["id"]      if SML is not within sRectArray[i]["rect"] then next repeat      put sRectArray[i]["id"] into targetStackName      exit repeat   end repeat  -- put targetStackName into fld 1end trackMovementon mouseUp   put "MU"   finishDragend mouseUpon mouseRelease   put "MR"   finishDragend mouseReleaseon finishDrag   set the vis of this stack to false      dispatch "cleanUpExternalDrag" to sCallerID with falseend finishDrag